[
    
        
            {
                "ref": "https://fukucchi.github.io/blog/post/readable_code1/",
                "title": "『リーダブルコード』を読みました",
                "section": "post",
                "date" : "2020.07.18",
                "body": "（最終更新：2020/7/22）\n業務コーディングのバイブル扱いされている『リーダブルコード』をついに読みました．これまでコードは動きさえすればいいとさえ思っていた人なので大変参考になりました．\n Boswell, Dustin \u0026amp; Foucher, Trevor『リーダブルコード\u0026mdash;\u0026mdash;より良いコードを書くためのシンプルで実践的なテクニック』角征典訳，オライリー・ジャパン，2012年．amazonリンク  時短しよう コーディングにあたってのキーワードは，「大切なのはコードの短さではなく読み手の理解時間の短さ」．それを達成するために簡単に意識できることを，上書の「第I部　表面上の改善」から2つだけまとめておきましょう．1つ目は，変数名はコメントだということ，2つ目は，コメントは監督のコメンタリーだということです．\n1. 変数名はコメント 変数名はコメントです．\n私がコードを書くのは基本競プロにおいてで，そうするとiとかjとかの1文字変数ばかり使いがちですが，たとえ競プロであっても，バグ率を下げるために変数名を工夫するのは有用そうです．例えば，配列clubs, members, usersのインデックスを，配列名の頭文字を使って，ci, mi, uiとするなど．\nあとは，単位を変数名に入れる．閉区間の範囲を指定するときはfirst, lastを使うなど．（右半開区間はbegin, end．）\n2. コメントは監督のコメンタリー コメントにはコードからすぐに抽出できること，調べればわかることを書くべきではありません．むしろ書かれるべきなのは，それを書いたあなたの意図，言わば監督のあなたがこのコードのドキュメンタリーで話す内容のことです．書いた時のモチベを書きましょう．工夫したことを書きましょう．他の書き方がありうるなら，それではなくこれを選んだポイントを書きましょう．間違いがあると分かっている箇所には，欠陥をTODO:, FIXME:，XXX: // 重大な欠陥などとして示しておきましょう．\n"
            }
        
    ,
        
            {
                "ref": "https://fukucchi.github.io/blog/post/vpn/",
                "title": "VPNとクラウドVPN",
                "section": "post",
                "date" : "2020.07.15",
                "body": "VPNってなに？ VPNとはVirtual Private Networkの略で，あたかも専用線を使っているかのように複数のネットワーク間で安全な通信を行うための仕組みです．\nこれは，インターネットと専用線の良さを両取りしたものです．インターネットには安価というメリットと安全性に欠けるというデメリットがあります．専用線には安全性があるというメリットと高価であるというデメリットがあります．VPNは両者のメリットを取り，安価かつ安全なネットワーク間の通信を可能にします．\n具体的には，VPNは，ネットワークAとネットワークBとの間の通信データを暗号化したり，署名を付与したりします．それによってあたかもネットワークAとネットワークBとが専用線で接続されているかのようなセキュリティ上の恩恵を実現することができます．\nまた，VPNは，ネットワーク同士の通信にも，端末とネットワークの間の通信にも使えます．\nクラウドVPN VPNを実現するには，VPNを構成できるルーターを入手する必要があります．\nまた，ルーターを設置するだけで拠点間VPNや端末からのリモートアクセスが可能になる，クラウドVPNというサービスもあります．これは，クラウド上の管理センターから，VPNの構築・運用・監視などを代行するものです．このクラウドVPNサービスとしては，例えば\u0026rdquo;Verona\u0026ldquo;という製品が有名です．\n"
            }
        
    ,
        
            {
                "ref": "https://fukucchi.github.io/blog/post/url/",
                "title": "URLには何が書いてあるの？",
                "section": "post",
                "date" : "2020.07.07",
                "body": "URL 頻繁に目にするURLですが，これにはどんな情報が書き込まれているのでしょうか．\n結論から言うと，URLとは，ブラウザからサーバーへのアクセス内容を示すものです．具体的には，1. どういうやり取りの手順で 2. どのサーバーに 3. 何のコンテンツを取りに行くかが書かれています．\n例 このページのURLを例にとって解読してみましょう．\nhttps://fukucchi.github.io/blog/post/url/ 3つの部分に分けて説明しましょう．まず冒頭には https://と書かれています．これは，WebブラウザとWebサーバの間のやり取りをHTTPSというルールで行うことを意味しています．HTTPSとは，HyperText Transfer Protocol Secureの略で，HTTPのセキュリティを高めたルールのことです．\n次に，fukucchi.github.io/で，fukucchi.github.io/という名前のWebサーバーにアクセスしていることがわかります．\n最後にblog/post/url/で，このWebサーバーに対してblog/post/url/というコンテンツを取りに行くということが書かれています．\n"
            }
        
    ,
        
            {
                "ref": "https://fukucchi.github.io/blog/post/http/",
                "title": "HTTPって何？",
                "section": "post",
                "date" : "2020.07.07",
                "body": "Webページが表示される場合には，Webブラウザ（例えばGoogle Chrome）がWebサーバーにハイパーテキストを要求し，対してWebサーバーがそれを送信するという手続きが毎回行われています．\nこの手続きのルールがHTTP（HyperText Transfer Protocol）です．HTTPには，ハイパーテキストを要求・送信する手順や，他にも，要求されたコンテンツが存在しなかった場合の応答方法など様々な手順が世界標準で定められています．HTTPのおかげで，任意のWebブラウザとwebサーバの間のやり取りを行うことが可能になっています．\n"
            }
        
    ,
        
            {
                "ref": "https://fukucchi.github.io/blog/post/webpage_and_html/",
                "title": "WebページとHTML",
                "section": "post",
                "date" : "2020.07.07",
                "body": "Webページ Webページはハイパーテキストから構成されています．ハイパーテキストとは，1つの Web ページに別の Webページへの参照（ハイパーリンク）を埋め込んで，無数のWebページ同士を関連付けることを可能にするテキストのことです．\nHTML ハイパーテキストを記述するための言語がHTML（HyperText Markup Language）です．名前から見て取れるように，HTMLはマークアップ言語の一種です．つまり，文章の表示方法やハイパーリンクをタグと呼ばれるマークによって表現します．例えば\n\u0026lt;title\u0026gt;エンジニアにたどりつくまで\u0026lt;/title\u0026gt; などとして，\n\u0026lt;タグ\u0026gt;意味づけされる文章\u0026lt;/タグ\u0026gt; という形で記述を行います．\n"
            }
        
    ,
        
            {
                "ref": "https://fukucchi.github.io/blog/post/api/",
                "title": "APIって何？",
                "section": "post",
                "date" : "2020.07.07",
                "body": "APIとはApplication Programming Interfaceの略で，Webサーバーがアプリとうまく情報をやり取りできるようにするものとイメージするとよいでしょう．\n例えばユーザーがスマートフォンに入れている天気予報アプリとWebサーバーの間では情報のやり取りが行われています．天気予報アプリからは地域の情報が Webサーバーに送られ，逆にWebサーバーからは天気の情報が送り返されます．\nここで，地域情報を受け取る役割を果たしているのがメッセージ受信APIです．\n"
            }
        
    ,
        
            {
                "ref": "https://fukucchi.github.io/blog/post/status_code/",
                "title": "ステータスコード",
                "section": "post",
                "date" : "2020.07.06",
                "body": "アウトプットのためにブログを始めます．まずは先日の面接で答えられなかったことで思い出深いステータスコードから．\nステータスコードというのは，HTTPリクエストに対する対してWebサーバーが返す処理結果のことです．100番台から500番台の5種類に大きく分けられます．\nまずは，100-300番台について．\n 100番台はリクエストが継続中であるということを 200番台はリクエストが正常に受理されたことを 300番台はコンテンツURLが移動したとかで，追加の処理が必要なこと を示します．  クライアントエラーとサーバーエラー そして重要なのが400,500番台で，これらはエラーを示します．\n 400番がクライアントエラー，つまりブラウザ側のエラー  400: Bad Request 404: Not Found   500番台はWebサーバーのエラーです．  500: Internal Server Error 503: Service Unavailable    400,500については必須ですね．\n"
            }
        
    
]